@page "/ProductShop/{Page:int}"
@page "/ProductShop/"
@using Kenkata_ECommerce.Shared.Models
@using Kenkata_ECommerce.Client.Pages
@using Microsoft.JSInterop

@inject IJSRuntime JS


<div class="page">
    <!-- sorting menu -->
    <div class="menu-wrapper">
        <div class="container headbanner">
            <!-- Id is from snippet, might have to change place -->
            <div class="menu-banner d-flex justify-content-between align-items-center">
                <!-- All but <row> comes from snippet. perhaps need to move to line 27 -->
                <div class="breadcrumb">
                    <p class="breadcrumb-title">Shop</p>
                    <ul class="breadcrumb">
                        <li><a href="#">Home</a></li>   <!-- add working href to project, in VS -->
                        <li>Shop</li>   <!-- add working href to project, in VS -->
                    </ul>
                </div>
                <div class="menu-navigation">
                    <nav class="navbar navbar-expand-lg navbar-light ps-lg-0 ps-auto">
                        <button class="btn btn-hide text-uppercase" type="button" data-bs-toggle="collapse" data-bs-target="#filterbar"
                                aria-expanded="false" aria-controls="filterbar" id="filter-btn"
                            <span class="fas fa-angle-left" id="filter-angle"></span>
                            <span id="btn-txt">Filters</span>
                        </button>
                        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mynav"
                                aria-controls="mynav" aria-expanded="false" aria-label="Toggle navigation" id="icon">
                            <span class="navbar-toggler-icon"></span>
                        </button>
                        <div class="collapse navbar-collapse" id="mynav">
                            <ul class="navbar-nav d-lg-flex align-items-lg-center">
                                <li class="nav-item active">
                                    <!--view Products by selection pref-->
                                    <select name="sort" id="sort">
                                        <option value="" hidden selected>Sort by</option>
                                        <option value="price">Price</option>
                                        <option value="popularity">Popularity</option>
                                        <option value="rating">Rating</option>
                                    </select>
                                </li>
                                <li class="nav-item d-inline-flex align-items-center justify-content-between mb-lg-0 mb-3">
                                    <!--Nr of Products to show-->
                                    <div class="d-inline-flex align-items-center mx-lg-2" id="select2">
                                        <div class="ps-2">Products:</div>
                                        <select name="pro" id="pro">
                                            <option value="9">9</option>
                                            <option value="12">12</option>
                                            <option value="24">24</option>
                                            <option value="36">36</option>
                                        </select>
                                    </div>
                                    <div class="font-weight-bold mx-2 result">18 from 200</div>
                                </li>
                                <li class="nav-item d-lg-none d-inline-flex"> </li>
                            </ul>
                        </div>
                    </nav>
                </div>
            </div>
        </div>
    </div>
    <!-- Content on page-->
    <div class="container my-5" id="content">
        <!-- Filterbar column -->
        <div class="column-left">
            <div id="filterbar collapse in">
                <div class="filter-box border-bottom">
                    <div> <label class="tick">New <input type="checkbox"> <span class="check"></span> </label> </div>
                    <div> <label class="tick">On Sale <input type="checkbox"> <span class="check"></span> </label> </div>
                    <div> <label class="tick">In Stock <input type="checkbox"> <span class="check"></span> </label> </div>
                </div>
                <div class="filter-box border-bottom">
                    <div class="filter-box-label d-flex justify-content-between align-items-center">
                        Product Categories
                        <button class="btn p-0 m-0" type="button" data-bs-toggle="collapse" data-bs-target="#inner-box" aria-expanded="false"
                                aria-controls="inner-box" id="out" onclick="outerFilter()">
                            <span class="fas fa-plus"></span>
                        </button>
                    </div>
                    <div id="inner-box" class="collapse mt-2">
                        <div class="my-1"> <label class="tick">Men's<input type="checkbox"> <span class="check"></span> </label> </div>
                        <div class="my-1"> <label class="tick">Women's<input type="checkbox"> <span class="check"></span> </label> </div>
                        <div class="my-1"> <label class="tick">Kids<input type="checkbox"> <span class="check"></span> </label> </div>
                        <div class="my-1"> <label class="tick">Hats <input type="checkbox"> <span class="check"></span> </label> </div>
                        <div class="my-1"> <label class="tick">Sunglasses <input type="checkbox"> <span class="check"></span> </label> </div>
                        <div class="my-1"> <label class="tick">Shoes<input type="checkbox"> <span class="check"></span> </label> </div>
                        <div class="my-1"> <label class="tick">Watches<input type="checkbox"> <span class="check"></span> </label> </div>
                    </div>
                </div>
                <div class="filter-box border-bottom">
                    <div class="filter-box-label d-flex justify-content-between align-items-center">
                        Filter by Price
                        <button class="btn p-0 m-0" type="button" data-bs-toggle="collapse" data-bs-target="#price" aria-expanded="false"
                                aria-controls="price">
                            <span class="fas fa-plus"></span>
                        </button>
                    </div>
                    <div class="collapse" id="price">
                        <div class="middle">
                            <div class="multi-range-slider">
                                <input type="range" id="input-left" min="0" max="100" value="10"> <input type="range" id="input-right" min="0" max="100" value="50">
                                <div class="slider">
                                    <div class="track"></div>
                                    <div class="range"></div>
                                    <div class="thumb left"></div>
                                    <div class="thumb right"></div>
                                </div>
                            </div>
                        </div>
                        <div class="d-flex align-items-center justify-content-between mt-2">
                            <div> <span id="amount-left" class="font-weight-bold"></span> $ </div>
                            <div> <span id="amount-right" class="font-weight-bold"></span> $ </div>
                        </div>
                    </div>
                </div>
                <div class="filter-box border-bottom">
                    <div class="filter-box-label d-flex justify-content-between align-items-center">
                        Filter by Color
                        <button class="btn p-0 m-0" type="button" data-bs-toggle="collapse" data-bs-target="#inner-box2" aria-expanded="false"
                                aria-controls="inner-box2">
                            <span class="fas fa-plus"></span>
                        </button>
                    </div>
                    <div id="inner-box2" class="collapse mt-2 me-1">
                        <div class="my-1"> <label class="tick">Black <input type="checkbox"> <span class="check btn-black"></span> </label> </div>
                        <div class="my-1"> <label class="tick">Gray <input type="checkbox"> <span class="check btn-gray"></span> </label> </div>
                        <div class="my-1"> <label class="tick">Red <input type="checkbox"> <span class="check btn-red"></span> </label> </div>
                        <div class="my-1"> <label class="tick">Green <input type="checkbox"> <span class="check btn-green"></span> </label> </div>
                        <div class="my-1"> <label class="tick">Orange <input type="checkbox"> <span class="check btn-orange"></span> </label> </div>
                        <div class="my-1"> <label class="tick">Brown <input type="checkbox"> <span class="check btn-brown"></span> </label> </div>
                    </div>
                </div>
                <div class="filter-box">
                    <div class="filter-box-label d-flex justify-content-between align-items-center">
                        Filter by Size
                        <button class="btn p-0 m-0" type="button" data-bs-toggle="collapse" data-bs-target="#size" aria-expanded="false"
                                aria-controls="size">
                            <span class="fas fa-plus"></span>
                        </button>
                    </div>
                    <div id="size" class="collapse mt-2 me-1">
                        <div class="my-1"> <label class="tick">XS<input type="checkbox"> <span class="check"></span> </label> </div>
                        <div class="my-1"> <label class="tick">S<input type="checkbox"> <span class="check"></span> </label> </div>
                        <div class="my-1"> <label class="tick">M<input type="checkbox"> <span class="check"></span> </label> </div>
                        <div class="my-1"> <label class="tick">L<input type="checkbox"> <span class="check"></span> </label> </div>
                        <div class="my-1"> <label class="tick">XL<input type="checkbox"> <span class="check"></span> </label> </div>
                        <div class="my-1"> <label class="tick">XXL<input type="checkbox"> <span class="check"></span> </label> </div>
                    </div>
                </div>
            </div>
        </div>
        <!--Products section-->
        <div class="column-right" id="products">
            <div class="wrapper">
                <!-- Here the ProductCard component is inserted. -->
                @foreach (var product in Products)
                {
                    <div class="column">
                        <ProductCard Id="@product.Id" />
                    </div>
                }
            </div>
        </div>
    </div>
    <!-- Products -->
    <div class="container d-flex">
        
    </div>

    <!-- Pagination (from Bootstrap snippet) -->
    <div class="container">
        <div class="d-flex justify-content-center" aria-label="Page navigation example">
            <Paging PI="pagingInfo" PageClassesEnabled="true" PageClass="Paging" PageClassSelected="active" />
        </div>
    </div>
</div>

@code {

    private List<ProductModel> allproducts;

    public IEnumerable<ProductModel> Products { get; set; } = Enumerable.Empty<ProductModel>();

    public string shoppingCartId;

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public int page { get; set; }

    PagingInfo pagingInfo = new PagingInfo();

    protected override async Task OnInitializedAsync()
    {
        allproducts = new();
        allproducts = await Http.GetFromJsonAsync<List<ProductModel>>("api/products");
    }

    private void GotoDetail(string Id)
    {
        NavManager.NavigateTo($"/products/{Id}");
    }

    protected override void OnParametersSet()
    {
        CreatePagingInfo();
    }

    public void CreatePagingInfo()
    {

        int PageSize9 = 9;
        pagingInfo = new PagingInfo();
        page = page == 0 ? 1 : page;
        pagingInfo.CurrentPage = page;
        pagingInfo.TotalItems = allproducts.Count();
        pagingInfo.ItemsPerPage = PageSize9;

        var skip = PageSize9 * (Convert.ToInt32(page) - 1);
        Products = allproducts.Skip(skip).Take(PageSize9).ToList();
    }
}
